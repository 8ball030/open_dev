[tool]
[tool.poetry]
name = "open_dev"
version = "0.1.1"
homepage = "https://github.com/8ball030/open_dev"
description = "A collection of tooling to enable open source development.."
authors = ["8Baller <8ball030@gmail.com>"]
readme = "README.md"
license =  "Apache-2.0"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: Apache Software License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.6',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
]
packages = [
    { include = "open_dev" },
    { include = "tests", format = "sdist" },
]


[tool.poetry.dependencies]
python = ">=3.7.2,<4.0"
click = "^8.1.3"
black = "^22.6.0"
isort = "^5.10.1"
mypy = "^0.971"
pytest-cov = "^3.0.0"
tox = "^3.25.1"
pip = "^22.2.2"
mkdocs = "^1.3.1"
mkdocs-include-markdown-plugin = "^3.6.1"
mkdocs-material = "^8.4.0"
mkdocstrings = "^0.19.0"
mkdocs-material-extensions = "^1.0.3"
twine = "^4.0.1"
mkdocs-autorefs = "^0.4.1"
pre-commit = "^2.20.0"
toml = "^0.10.2"
bump2version = "^1.0.1"
yamllint = "^1.27.1"
GitPython = "^3.1.27"
pylama = {extras = ["all"], version = "^8.4.1"}
rich-click = "^1.5.2"

[tool.poetry.dev-dependencies]


[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "mypy",
    "pylama",
    "pytest-cov"
    ]

dev = ["tox", "pre-commit", "virtualenv", "pip", "twine", "toml", "bump2version"]

doc = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extension",
    "mkdocs-autorefs"
    ]

[tool.poetry.scripts]
open_dev = 'open_dev.cli:main'

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py37', 'py38', 'py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0", "setuptools"]
